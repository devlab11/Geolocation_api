var search_data = {"index":{"searchIndex":["api","v1","errorserializer","geolocationscontroller","applicationcable","channel","connection","applicationcontroller","applicationjob","applicationmailer","applicationrecord","creategeolocations","geoapi","application","geolocation","ipstackservice","api","exception","badrequest","internalservererror","serviseprovidererror","v1","getclient","clientconnect","config","errorhandler","object","access_key()","activate_bundler()","activation_error_handling()","bad_request()","base_url()","bundler_requirement()","bundler_requirement_for()","call()","change()","cli_arg_version()","create()","destroy()","env_var_version()","gemfile()","get()","get_request()","index()","internal_server_error()","invoked_as_script?()","load_bundler!()","lockfile()","lockfile_version()","new()","parameter_missing()","routing_error()","service_name()","servise_error_response()","show()","system!()","dockerfile","gemfile","gemfile.lock","readme","rakefile","config.ru","credentials.yml.enc","master.key","entrypoint.sh","development.log","test.log","robots","development_secret","restart"],"longSearchIndex":["api","api::v1","api::v1::errorserializer","api::v1::geolocationscontroller","applicationcable","applicationcable::channel","applicationcable::connection","applicationcontroller","applicationjob","applicationmailer","applicationrecord","creategeolocations","geoapi","geoapi::application","geolocation","ipstackservice","ipstackservice::api","ipstackservice::api::exception","ipstackservice::api::exception::badrequest","ipstackservice::api::exception::internalservererror","ipstackservice::api::exception::serviseprovidererror","ipstackservice::api::v1","ipstackservice::api::v1::getclient","ipstackservice::clientconnect","ipstackservice::config","ipstackservice::errorhandler","object","ipstackservice::config::access_key()","object#activate_bundler()","object#activation_error_handling()","applicationcontroller#bad_request()","ipstackservice::config::base_url()","object#bundler_requirement()","object#bundler_requirement_for()","ipstackservice::errorhandler#call()","creategeolocations#change()","object#cli_arg_version()","api::v1::geolocationscontroller#create()","api::v1::geolocationscontroller#destroy()","object#env_var_version()","object#gemfile()","ipstackservice::clientconnect::get()","ipstackservice::api::v1::getclient::get_request()","api::v1::geolocationscontroller#index()","applicationcontroller#internal_server_error()","object#invoked_as_script?()","object#load_bundler!()","object#lockfile()","object#lockfile_version()","ipstackservice::errorhandler::new()","applicationcontroller#parameter_missing()","applicationcontroller#routing_error()","ipstackservice::config::service_name()","applicationcontroller#servise_error_response()","api::v1::geolocationscontroller#show()","object#system!()","","","","","","","","","","","","","",""],"info":[["Api","","Api.html","",""],["Api::V1","","Api/V1.html","",""],["Api::V1::ErrorSerializer","","Api/V1/ErrorSerializer.html","",""],["Api::V1::GeolocationsController","","Api/V1/GeolocationsController.html","",""],["ApplicationCable","","ApplicationCable.html","",""],["ApplicationCable::Channel","","ApplicationCable/Channel.html","",""],["ApplicationCable::Connection","","ApplicationCable/Connection.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationJob","","ApplicationJob.html","",""],["ApplicationMailer","","ApplicationMailer.html","",""],["ApplicationRecord","","ApplicationRecord.html","",""],["CreateGeolocations","","CreateGeolocations.html","",""],["GeoApi","","GeoApi.html","",""],["GeoApi::Application","","GeoApi/Application.html","",""],["Geolocation","","Geolocation.html","",""],["IpstackService","","IpstackService.html","",""],["IpstackService::Api","","IpstackService/Api.html","",""],["IpstackService::Api::Exception","","IpstackService/Api/Exception.html","",""],["IpstackService::Api::Exception::BadRequest","","IpstackService/Api/Exception/BadRequest.html","",""],["IpstackService::Api::Exception::InternalServerError","","IpstackService/Api/Exception/InternalServerError.html","",""],["IpstackService::Api::Exception::ServiseProviderError","","IpstackService/Api/Exception/ServiseProviderError.html","",""],["IpstackService::Api::V1","","IpstackService/Api/V1.html","",""],["IpstackService::Api::V1::GetClient","","IpstackService/Api/V1/GetClient.html","",""],["IpstackService::ClientConnect","","IpstackService/ClientConnect.html","",""],["IpstackService::Config","","IpstackService/Config.html","",""],["IpstackService::ErrorHandler","","IpstackService/ErrorHandler.html","",""],["Object","","Object.html","",""],["access_key","IpstackService::Config","IpstackService/Config.html#method-c-access_key","()",""],["activate_bundler","Object","Object.html#method-i-activate_bundler","()",""],["activation_error_handling","Object","Object.html#method-i-activation_error_handling","()",""],["bad_request","ApplicationController","ApplicationController.html#method-i-bad_request","(error)",""],["base_url","IpstackService::Config","IpstackService/Config.html#method-c-base_url","()",""],["bundler_requirement","Object","Object.html#method-i-bundler_requirement","()",""],["bundler_requirement_for","Object","Object.html#method-i-bundler_requirement_for","(version)",""],["call","IpstackService::ErrorHandler","IpstackService/ErrorHandler.html#method-i-call","(env)",""],["change","CreateGeolocations","CreateGeolocations.html#method-i-change","()",""],["cli_arg_version","Object","Object.html#method-i-cli_arg_version","()",""],["create","Api::V1::GeolocationsController","Api/V1/GeolocationsController.html#method-i-create","()","<p>POST /geolocations\n"],["destroy","Api::V1::GeolocationsController","Api/V1/GeolocationsController.html#method-i-destroy","()","<p>DELETE /geolocations/:id\n"],["env_var_version","Object","Object.html#method-i-env_var_version","()",""],["gemfile","Object","Object.html#method-i-gemfile","()",""],["get","IpstackService::ClientConnect","IpstackService/ClientConnect.html#method-c-get","(path)",""],["get_request","IpstackService::Api::V1::GetClient","IpstackService/Api/V1/GetClient.html#method-c-get_request","(ip)",""],["index","Api::V1::GeolocationsController","Api/V1/GeolocationsController.html#method-i-index","()","<p>GET /geolocations\n"],["internal_server_error","ApplicationController","ApplicationController.html#method-i-internal_server_error","(error)",""],["invoked_as_script?","Object","Object.html#method-i-invoked_as_script-3F","()",""],["load_bundler!","Object","Object.html#method-i-load_bundler-21","()",""],["lockfile","Object","Object.html#method-i-lockfile","()",""],["lockfile_version","Object","Object.html#method-i-lockfile_version","()",""],["new","IpstackService::ErrorHandler","IpstackService/ErrorHandler.html#method-c-new","(app)",""],["parameter_missing","ApplicationController","ApplicationController.html#method-i-parameter_missing","()",""],["routing_error","ApplicationController","ApplicationController.html#method-i-routing_error","()",""],["service_name","IpstackService::Config","IpstackService/Config.html#method-c-service_name","()",""],["servise_error_response","ApplicationController","ApplicationController.html#method-i-servise_error_response","(error)",""],["show","Api::V1::GeolocationsController","Api/V1/GeolocationsController.html#method-i-show","()","<p>GET /geolocations/:id\n"],["system!","Object","Object.html#method-i-system-21","(*args)",""],["Dockerfile","","Dockerfile.html","","<p>FROM ruby:3.1.2 RUN apt-get update -qq &amp;&amp; apt-get install -y nodejs postgresql-client WORKDIR …\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org” git_source(:github) { |repo| “github.com/#{repo}.git” }\n<p>ruby …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  actioncable (7.0.4)\n    actionpack (= 7.0.4)\n    activesupport ...</pre>\n"],["README","","README_md.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and ...\n"],["Rakefile","","Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for example lib/tasks/capistrano.rake …\n"],["config.ru","","config_ru.html","","<p># This file is used by Rack-based servers to start the application.\n<p>require_relative “config/environment” …\n"],["credentials.yml.enc","","config/credentials_yml_enc.html","","<p>XmdZpl2vBW/S6FY3gU1Ynpl6WprPN4CT8o9abqoq6WRNbMxXSUFpSI52FGbUFisK33R6JxKYgcJjJYWJ8KKNXdHsBT7yN63Aelqd5MrwAQY/F6blztovrFFsWO3mq …\n"],["master.key","","config/master_key.html","","<p>36c414fc06e71b6ac9262536ef8acb78\n"],["entrypoint.sh","","entrypoint_sh.html","","<p>#!/bin/bash set -e\n<p># Remove a potentially pre-existing server.pid for Rails. rm -f /myapp/tmp/pids/server.pid …\n"],["development.log","","log/development_log.html","","<p>Started DELETE “/geolocations/1” for 127.0.0.1 at 2023-01-11 17:10:06 -0600\n\n<pre>\u001b[1m\u001b[35m (80.5ms)\u001b[0m ...</pre>\n"],["test.log","","log/test_log.html","","\n<pre>\u001b[1m\u001b[36mActiveRecord::InternalMetadata Pluck (2.2ms)\u001b[0m  \u001b[1m\u001b[34mSELECT `ar_internal_metadata`.`value` ...</pre>\n"],["robots","","public/robots_txt.html","","<p># See www.robotstxt.org/robotstxt.html for documentation on how to use the robots.txt file\n"],["development_secret","","tmp/development_secret_txt.html","","<p>f49221a726e77c3bc4a509dc7c5a7764322b53fd2af9110d1d07bb8c76546413668d4381954c4e3380d80e800bd352e00cc42684fc150534da179f34c23c142c …\n"],["restart","","tmp/restart_txt.html","",""]]}}